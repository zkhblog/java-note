全局锁
做全库逻辑备份时会使用到全局锁。
官方自带的逻辑备份工具是mysqldump。当mysqldump使用参数–single-transaction的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于MVCC的支持，这个过程中数据是可以正常更新的。
对于MyISAM这种不支持事务的引擎，如果备份过程中有更新，总是只能取到最新的数据，那么就破坏了备份的一致性。这时，我们就需要使用FTWRL命令了。
不使用set global readonly=true的原因有两点，一是修改global变量的方式影响面更大，因为一般用readonly的值来判断一个库是主库还是备库。二是在异常处理机制上有差异，执行FTWRL命令之后由于客户端异常断开，mysql会自动释放这个全局锁，而将整个库设置为readonly之后，如果客户端发生异常，则数据库一直保持readonly状态，这样会导致整个库长时间处于不可写状态，风险较高。
表级锁
①表锁的语法：lock tables...read/write
与FTWRL类似，可以用unlock tables主动释放锁，也可以在客户端断开的时候自动释放。需要注意的是，lock tables语法除了会限制别的线程的读写外，也限定了本线程接下来的操作对象。
②MDL（元数据锁）
MDL不需要显示使用，在访问一个表的时候会被自动加上。
因此，在MySQL 5.5版本中引入了MDL，当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。
读写锁之间、写锁之间是互斥的，用来保证变更表结构操作的安全性。因此，如果有两个线程要同时给一个表加字段，其中一个要等另一个执行完才能开始执行。
