索引？

1.聚簇索引(主键索引)：在数据库里面，所有行数都会按照主键索引进行排序。
2.非聚簇索引：
  普通分类：
	(1)唯一索引
	作用：避免同一个表中某数据列中的值重复
	与主键索引的区别：主键索引只能有一个，唯一索引可有多个
	(2)普通索引
	作用：快速定位特定数据
	注意：index和key关键字都可以设置常规索引，但不要加太多普通索引，会影响数据的变更效率
	(3)全文索引
	作用：快速定位特定数据
  按索引列个数分类：
	(1)单行索引：单数据列	(2)复合索引：多数据列组成的复合索引。复合索引使用原则：最左原则，有A、B、C三个字段建立的联合索引，如果A字段在查询时为空，那么这个复合索引不生效；如果A字段不为空，B、C不管为不为空，那么复合索引都是生效的。
	
B-树与B+树是什么？



索引失效的情况

    1. 模糊查询以%开头，如 like " %Nanci"
    2. 索引列进行表达式计算或者函数式操作
    3. 索引列用了 != ，or， in(多个值)
       备注：in里面如果只有一个值，例如：age in(12) 是等同于age=12的，会使用到索引。
    4. 在where子句中进行null值判断：age is null( is not null)
    5.复合索引不满足最左原则

 

数据库索引使用代价
     数据库索引并不是越多越好，心里要有一把称，适可而止，恰到好处。

    1.索引会占用空间：表越大，索引占的空间越大。

    2.数据库性能：主要是在表中新增、修改和删除数据时，索引也会有相同的操作。建立在某列或多列的索引需要保存该列最新的数据。

使用索引时，有以下一些技巧和注意事项：
1.索引不会包含有null值的列
只要列中包含有null值都将不会被包含在索引中，复合索引中只要有一列含有null值，那么这一列对于此复合索引就是无效的。所以我们在数据库设计时不要让字段的默认值为null。
2.使用短索引
对串列进行索引，如果可能应该指定一个前缀长度。例如，如果有一个char(255)的列，如果在前10个或20个字符内，多数值是惟一的，那么就不要对整个列进行索引。短索引不仅可以提高查询速度而且可以节省磁盘空间和I/O操作。
3.索引列排序
查询只使用一个索引，因此如果where子句中已经使用了索引的话，那么order by中的列是不会使用索引的。因此数据库默认排序可以符合要求的情况下不要使用排序操作；尽量不要包含多个列的排序，如果需要最好给这些列创建复合索引。
4.like语句操作
一般情况下不推荐使用like操作，如果非使用不可，如何使用也是一个问题。like “%aaa%” 不会使用索引而like “aaa%”可以使用索引。
5.不要在列上进行运算
这将导致索引失效而进行全表扫描，例如

SELECT * FROM table_name WHERE YEAR(column_name)<2017;
6.不使用not in和<>操作